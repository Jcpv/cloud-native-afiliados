        docker pull mariadb
        docker inspect --format='{{.Config.ExposedPorts}}' mariadb
        docker run -d -p 3306:3306 --name mysql_afiliados -e MARIADB_ROOT_PASSWORD=Pruebas1234 mariadb
        docker run -d -p 33060:3306 --name mysql-db  -e MYSQL_ROOT_PASSWORD=secret --mount src=mysql-db-data,dst=/var/lib/mysql mysql

        docker network inspect bridge
        ping 172.17.0.4

        docker exec -it mysql_afiliado bash
        mariadb -u root -p

# https://jojozhuang.github.io/architecture/creating-mysql-image-with-docker-file/

# PARA CREAR CONTENEDOR DE LA BD
docker build -t josecandidop/mysql_afiliado:v1 .
    docker login
    docker push josecandidop/mysql_afiliado:v1

docker run -d -p 3306:3306 --name josecandidop_mysql_af josecandidop/mysql_afiliado:v1

docker exec -it mysql_afiliado bash
mariadb -u root -p
create database CloudNative;
# INSERTAR DATOS

##########
# PARA CREAR CONTENEDOR DE LA APP.
docker build -t josecandidop/afiliados2020:v1 .

    docker images | grep josecandidop

    docker login
    docker push josecandidop/afiliados2020:v1

docker run -d -p 80:80 --name afiliados --rm josecandidop/afiliados2020:v1
   
    docker exec -it afiliados bash
    apt-get update
    apt-get install -y iputils-ping
    ping 172.17.0.5



curl http://localhost/cloud_native_proy/api.php/analisis/afiliados2020/32

curl localhost/cloud_native_proy/api.php/analisis/afiliados2020/32
    curl localhost/cloud_native_proy/index.html
    curl localhost/cloud_native_proy/demo.php
    curl localhost/cloud_native_proy/info.php


--- KUBERNETES
kubectl apply -f web-app-pod.yaml
kubectl apply -f web-app-pod.yaml


# ESTADO DEL POD
kubectl get pods -l app=web-app-pod
# ESTADO DEL DEPLOYMENT
kubectl get deployment web-app-pod



# Utiliza una imagen base de PHP con Apache
FROM php:7.4-apache
 

# Comando para iniciar el servidor web
CMD ["nginx", "-g", "daemon off;"]

docker build -t trainingdock/apache:v1 .
# 14. Creamos otro nuevo contenedor. Debemos parar el anterior contenedor para poder usar el mismo puerto
docker run -d -p 80:80 --name nginx2 --rm trainingdock/nginx:v1